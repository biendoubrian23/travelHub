// Script pour mettre √† jour les r√¥les 'agency_admin' vers 'agence' directement via SQL
// Fournit les instructions pour appliquer la migration manuellement

// Note: Ce script n'a pas besoin d'acc√©der au fichier de migration

// Fonction pour afficher les instructions de migration
function applyMigration() {
  console.log('üîÑ Instructions pour la mise √† jour des r√¥les agency_admin vers agence...');
  
  try {
    
    console.log('\n‚ö†Ô∏è Cette migration doit √™tre appliqu√©e manuellement dans la base de donn√©es.');
    console.log('‚ö†Ô∏è Pour appliquer cette migration, connectez-vous √† votre base de donn√©es Supabase');
    console.log('‚ö†Ô∏è et ex√©cutez la requ√™te SQL suivante:');
    console.log('\n-------------------------------------------------');
    console.log(`
-- Migration: Uniformiser les r√¥les admin vers agence
-- Date: 2025-08-09

-- 1. Mettre √† jour tous les utilisateurs avec le r√¥le agency_admin vers agence
UPDATE users 
SET role = 'agence'
WHERE role = 'agency_admin';

-- 2. S'assurer que les mappings de r√¥les sont coh√©rents dans tous les triggers
-- IMPORTANT: Cette partie est comment√©e car les changements ont √©t√© faits dans les fichiers de migration
-- et les scripts SQL

-- 3. Ajouter un commentaire dans la colonne role pour clarifier les r√¥les disponibles
COMMENT ON COLUMN users.role IS 'R√¥le sp√©cifique: agence, agency_manager, agency_employee, agency_driver, client, super_admin';
`);
    console.log('-------------------------------------------------');
    
    console.log('\n‚úÖ Les fichiers de code source ont √©t√© mis √† jour avec succ√®s.');
    console.log('‚úÖ Les fichiers SQL ont √©t√© mis √† jour avec succ√®s.');
    console.log('‚úÖ La migration SQL a √©t√© cr√©√©e et doit √™tre ex√©cut√©e manuellement.');
    
  } catch (err) {
    console.error('‚ùå Erreur inattendue:', err.message);
  }
}

// Ex√©cuter la fonction
applyMigration();
