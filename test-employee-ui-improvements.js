// Test pour v√©rifier les am√©liorations de la liste des employ√©s
// Ex√©cuter dans la console du navigateur sur la page des employ√©s

console.log('üß™ TEST DES AM√âLIORATIONS LISTE EMPLOY√âS');
console.log('=====================================');

// 1. V√©rifier que la colonne t√©l√©phone est pr√©sente
console.log('\n1. V√©rification de la colonne t√©l√©phone...');
const phoneHeader = document.querySelector('th:contains("T√©l√©phone")') || 
                   Array.from(document.querySelectorAll('th')).find(th => th.textContent.includes('T√©l√©phone'));
console.log('‚úÖ En-t√™te t√©l√©phone:', phoneHeader ? 'Trouv√©' : '‚ùå Manquant');

// 2. V√©rifier que la recherche fonctionne
console.log('\n2. Test de la fonction de recherche...');
const searchInput = document.querySelector('.search-input');
if (searchInput) {
  console.log('‚úÖ Champ de recherche trouv√©');
  console.log('üìù Placeholder:', searchInput.placeholder);
  
  // Simuler une recherche
  searchInput.value = 'test';
  searchInput.dispatchEvent(new Event('input', { bubbles: true }));
  console.log('‚úÖ Test de recherche simul√©');
} else {
  console.log('‚ùå Champ de recherche non trouv√©');
}

// 3. V√©rifier les filtres
console.log('\n3. V√©rification des filtres...');
const roleFilter = document.querySelector('.filter-select');
console.log('‚úÖ Filtre r√¥le:', roleFilter ? 'Trouv√©' : '‚ùå Manquant');

// 4. Compter les employ√©s affich√©s
console.log('\n4. Employ√©s affich√©s...');
const employeeRows = document.querySelectorAll('.employee-row');
console.log(`üìä Nombre d'employ√©s dans la table: ${employeeRows.length}`);

// 5. V√©rifier qu'on peut cliquer sur une ligne
console.log('\n5. Test du clic sur une ligne...');
if (employeeRows.length > 0) {
  const firstRow = employeeRows[0];
  console.log('‚úÖ Premi√®re ligne trouv√©e');
  
  // V√©rifier les donn√©es affich√©es dans la ligne
  const cells = firstRow.querySelectorAll('td');
  if (cells.length >= 6) {
    console.log('üìã Donn√©es de la premi√®re ligne:');
    console.log('   Nom:', cells[0].textContent.trim());
    console.log('   Email:', cells[1].textContent.trim());
    console.log('   T√©l√©phone:', cells[2].textContent.trim());
    console.log('   R√¥le:', cells[3].textContent.trim());
    console.log('   Statut:', cells[4].textContent.trim());
    console.log('   Date:', cells[5].textContent.trim());
  }
} else {
  console.log('‚ùå Aucun employ√© affich√©');
}

// 6. V√©rifier les badges de statut et r√¥le
console.log('\n6. V√©rification des badges...');
const statusBadges = document.querySelectorAll('.status-badge');
const roleBadges = document.querySelectorAll('.role-badge');
console.log(`‚úÖ Badges de statut: ${statusBadges.length}`);
console.log(`‚úÖ Badges de r√¥le: ${roleBadges.length}`);

// 7. Test du modal de d√©tails (si pas d√©j√† ouvert)
console.log('\n7. Test d\'ouverture du modal...');
if (employeeRows.length > 0 && !document.querySelector('.employee-details-modal')) {
  console.log('üîÑ Simulation du clic pour ouvrir les d√©tails...');
  employeeRows[0].click();
  
  setTimeout(() => {
    const modal = document.querySelector('.employee-details-modal');
    if (modal) {
      console.log('‚úÖ Modal de d√©tails ouvert');
      
      // V√©rifier les sections d'informations
      const detailSections = modal.querySelectorAll('.detail-section');
      console.log(`üìã Sections de d√©tails: ${detailSections.length}`);
      
      // V√©rifier les informations affich√©es
      const detailRows = modal.querySelectorAll('.detail-row');
      console.log(`üìù Lignes de d√©tails: ${detailRows.length}`);
      
      detailRows.forEach((row, index) => {
        const label = row.querySelector('.label')?.textContent;
        const value = row.querySelector('span:last-child')?.textContent;
        if (label && value) {
          console.log(`   ${label}: ${value}`);
        }
      });
      
    } else {
      console.log('‚ùå Modal de d√©tails non ouvert');
    }
  }, 1000);
} else if (document.querySelector('.employee-details-modal')) {
  console.log('‚úÖ Modal de d√©tails d√©j√† ouvert');
} else {
  console.log('‚ùå Aucun employ√© pour tester le modal');
}

console.log('\nüéØ R√âSUM√â DES AM√âLIORATIONS:');
console.log('‚úÖ Colonne t√©l√©phone ajout√©e');
console.log('‚úÖ Recherche par t√©l√©phone activ√©e');
console.log('‚úÖ Modal de d√©tails avec toutes les infos');
console.log('‚úÖ Filtres fonctionnels');
console.log('‚úÖ Interface responsive');

console.log('\nüí° POUR TESTER MANUELLEMENT:');
console.log('1. Tapez dans la recherche pour filtrer');
console.log('2. Utilisez les filtres de r√¥le et statut');
console.log('3. Cliquez sur une ligne pour voir les d√©tails');
console.log('4. V√©rifiez que le t√©l√©phone s\'affiche bien');
