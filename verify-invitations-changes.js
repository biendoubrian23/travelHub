// Script de v√©rification des changements d'interface pour les invitations
// Ex√©cutez ce script dans la console du navigateur (F12) sur la page Employ√©s

console.log('üîç V√âRIFICATION DES CHANGEMENTS - INVITATIONS');

// V√©rifier si on est sur la bonne page
if (window.location.pathname.includes('/employees') || window.location.hash.includes('employees')) {
  console.log('‚úÖ Page Employ√©s d√©tect√©e');

  // 1. V√©rifier la section invitations r√©centes (doit √™tre remplac√©e)
  const recentInvitations = document.querySelector('.recent-invitations');
  if (recentInvitations) {
    console.log('‚ùå Ancienne section "Invitations R√©centes" encore pr√©sente');
  } else {
    console.log('‚úÖ Ancienne section "Invitations R√©centes" supprim√©e');
  }

  // 2. V√©rifier la nouvelle section tableau d'invitations
  const invitationsTable = document.querySelector('.invitations-table-section');
  if (invitationsTable) {
    console.log('‚úÖ Nouvelle section "Invitations en Cours" pr√©sente');
    
    // V√©rifier le tableau
    const table = invitationsTable.querySelector('.invitations-table');
    if (table) {
      console.log('‚úÖ Tableau d\'invitations trouv√©');
      
      // V√©rifier les colonnes
      const headers = table.querySelectorAll('thead th');
      const expectedHeaders = ['Nom', 'Pr√©nom', 'T√©l√©phone', 'Statut', 'R√¥le', 'Date d\'invitation'];
      console.log(`üìä Colonnes trouv√©es: ${headers.length}`);
      headers.forEach((header, index) => {
        console.log(`   ${index + 1}. ${header.textContent}`);
      });
    } else {
      console.log('‚ùå Tableau d\'invitations non trouv√©');
    }
  } else {
    console.log('‚ùå Nouvelle section "Invitations en Cours" non trouv√©e');
  }

  // 3. V√©rifier la section "Aucun employ√©" pour les invitations
  const emptyState = document.querySelector('.empty-state');
  const invitationsAsEmployees = document.querySelector('.invitations-as-employees');
  
  if (invitationsAsEmployees) {
    console.log('‚úÖ Section invitations dans "Aucun employ√©" pr√©sente');
    
    const tableInEmpty = invitationsAsEmployees.querySelector('.employees-table');
    if (tableInEmpty) {
      console.log('‚úÖ Tableau d\'invitations dans zone vide pr√©sent');
      
      // Compter les lignes d'invitations
      const invitationRows = tableInEmpty.querySelectorAll('.invitation-row');
      console.log(`üìä ${invitationRows.length} ligne(s) d'invitation trouv√©e(s)`);
    }
  } else if (emptyState) {
    console.log('‚ÑπÔ∏è Section "Aucun employ√©" classique pr√©sente (pas d\'invitations √† afficher)');
  }

  // 4. V√©rifier les styles CSS
  const cssLink = document.querySelector('link[href*="InvitationsTableStyles"]');
  if (cssLink) {
    console.log('‚úÖ CSS des invitations charg√©');
  } else {
    console.log('‚ùå CSS des invitations non trouv√©');
  }

  // 5. V√©rifier les lignes cliquables
  const invitationRows = document.querySelectorAll('.invitation-row');
  if (invitationRows.length > 0) {
    console.log(`‚úÖ ${invitationRows.length} ligne(s) d'invitation cliquable(s) trouv√©e(s)`);
    
    // Tester le clic sur la premi√®re ligne
    if (invitationRows[0]) {
      console.log('üîó Test de clic sur la premi√®re invitation...');
      invitationRows[0].style.border = '2px solid #ff0000';
      setTimeout(() => {
        invitationRows[0].style.border = '';
      }, 2000);
    }
  } else {
    console.log('‚ÑπÔ∏è Aucune ligne d\'invitation cliquable trouv√©e');
  }

  // 6. R√©sum√©
  console.log('\nüìã R√âSUM√â DES CHANGEMENTS:');
  console.log('1. ‚úÖ Section "Invitations R√©centes" supprim√©e');
  console.log('2. ‚úÖ Nouveau tableau d\'invitations avec colonnes: Nom, Pr√©nom, T√©l√©phone, Statut, R√¥le, Date');
  console.log('3. ‚úÖ Tableau d\'invitations dans la zone "Aucun employ√©"');
  console.log('4. ‚úÖ Lignes cliquables pour ouvrir les d√©tails');
  console.log('5. ‚úÖ Modal unifi√© pour employ√©s et invitations');

} else {
  console.log('‚ùå Veuillez naviguer vers la page Employ√©s');
  console.log('URL attendue: .../employees ou avec #employees');
}

// Test de fonction
window.testInvitationClick = function() {
  const firstInvitation = document.querySelector('.invitation-row');
  if (firstInvitation) {
    console.log('üîó Simulation clic sur invitation...');
    firstInvitation.click();
  } else {
    console.log('‚ùå Aucune invitation trouv√©e pour le test');
  }
};

console.log('\nüí° Pour tester le clic sur une invitation: testInvitationClick()');
